generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["relationJoins"]
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  userId   String   @id @default(uuid())
  username String   @unique
  fullName String?
  password String
  role     userRole
  imgUrl   String?

  mealPlans          ChosenMeal[]
  createdMeals       Meal[]
  createdIngredients Ingredient[]
  targetNutrients    UserTargetNutrient[]
  userPhysicalStat   UserPhysicalStat?
}

model UserPhysicalStat {
  userPhysicalStatId String     @id @default(uuid())
  age                Int
  gender             gender
  height             Float
  heightUnit         heightUnit @default(cm)
  weightInKg         Float
  tdee               Int

  activityLevel   ActivityLevel? @relation(fields: [activityLevelId], references: [activityLevelId])
  activityLevelId Int
  user            User           @relation(fields: [userId], references: [userId])
  userId          String         @unique
}

model ActivityLevel {
  activityLevelId   Int           @id @default(autoincrement())
  activityLevelType activityLevel @unique

  userPhysicalStats UserPhysicalStat[]
}

model ChosenMeal {
  chosenMealId String   @id @default(uuid())
  mealTime     mealTime
  quantity     Float
  appliedDate  DateTime

  meal   Meal   @relation(fields: [mealId], references: [mealId])
  mealId Int
  users  User?  @relation(fields: [userId], references: [userId])
  userId String

  @@unique([userId, mealTime, appliedDate])
}

model Meal {
  mealId   Int      @id @default(autoincrement())
  mealName String   @unique
  mealType mealType @default(food)
  imgURL   String?

  createdBy String?
  user      User?   @relation(fields: [createdBy], references: [userId])

  ingredients MealIngredient[]
  chosenMeals ChosenMeal[]
}

model MealIngredient {
  mealIngredientId Int            @id @default(autoincrement())
  ingredientValue  Float
  ingredientUnit   ingredientUnit @default(g)

  ingredientUnitCovert IngredientUnitCovert @relation(fields: [ingredientUnit], references: [ingredientUnit])
  meal                 Meal                 @relation(fields: [mealId], references: [mealId], onDelete: Cascade)
  mealId               Int
  ingredient           Ingredient           @relation(fields: [ingredientId], references: [ingredientId], onDelete: Cascade)
  ingredientId         Int

  @@unique([mealId, ingredientId])
}

model IngredientUnitCovert {
  ingredientUnit ingredientUnit @id
  covertToGrams  Float

  mealIngredients MealIngredient[]
}

model Ingredient {
  ingredientId   Int             @id @default(autoincrement())
  ingredientName String
  ingredientType ingredientType?

  createdBy String?
  user      User?   @relation(fields: [createdBy], references: [userId])

  nutrients IngredientNutrient[]
  meals     MealIngredient[]
}

model IngredientNutrient {
  ingredientNutrientId Int   @id @default(autoincrement())
  nutrientValueOn100g  Float

  ingredient   Ingredient @relation(fields: [ingredientId], references: [ingredientId], onDelete: Cascade)
  ingredientId Int
  nutrient     Nutrient   @relation(fields: [nutrientId], references: [nutrientId])
  nutrientId   Int

  @@unique([ingredientId, nutrientId])
}

model UserTargetNutrient {
  userTargetNutrientId String @id @default(uuid())
  targetNutrientValue  Float

  user       User     @relation(fields: [userId], references: [userId])
  userId     String
  nutrient   Nutrient @relation(fields: [nutrientId], references: [nutrientId])
  nutrientId Int

  @@unique([userId, nutrientId])
}

model Nutrient {
  nutrientId   Int          @id @default(autoincrement())
  nutrientName String       @unique
  nutrientType nutrientType @default(macro)
  nutrientUnit nutrientUnit @default(g)

  ingredients IngredientNutrient[]
  users       UserTargetNutrient[]
}

enum nutrientType {
  macro
  micro
}

enum nutrientUnit {
  kCal
  g
  mg
  mcg
}

enum mealTime {
  breakfast
  lunch
  dinner
  snack
}

enum mealType {
  food
  fruit
  drink
  snack
}

enum gender {
  male
  female
  other
}

enum heightUnit {
  m
  cm
}

enum ingredientUnit {
  g
  tbsp // 18g
  tsp // 6g
  cup // 292g
  dash // 0.4g
}

enum ingredientType {
  meat
  vegetable
  milk
  nut
  fruit
  oil
  seafood
  spice
  candy
  beverage
  bread
  other
}

enum activityLevel {
  low
  medium
  high
}

enum userRole {
  admin
  user
}
